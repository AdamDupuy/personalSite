[{"C:\\Users\\yetan\\Programs\\personalSite\\src\\index.tsx":"1","C:\\Users\\yetan\\Programs\\personalSite\\src\\reportWebVitals.ts":"2","C:\\Users\\yetan\\Programs\\personalSite\\src\\App.tsx":"3","C:\\Users\\yetan\\Programs\\personalSite\\src\\Pages\\Home.tsx":"4","C:\\Users\\yetan\\Programs\\personalSite\\src\\Components\\Header.tsx":"5","C:\\Users\\yetan\\Programs\\personalSite\\src\\Pages\\Projects.tsx":"6"},{"size":573,"mtime":1698763066990,"results":"7","hashOfConfig":"8"},{"size":440,"mtime":1698763066993,"results":"9","hashOfConfig":"8"},{"size":692,"mtime":1698764313664,"results":"10","hashOfConfig":"8"},{"size":2864,"mtime":1698763066987,"results":"11","hashOfConfig":"8"},{"size":5143,"mtime":1698764326496,"results":"12","hashOfConfig":"8"},{"size":923,"mtime":1698763066989,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o2dr91",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"C:\\Users\\yetan\\Programs\\personalSite\\src\\index.tsx",[],[],"C:\\Users\\yetan\\Programs\\personalSite\\src\\reportWebVitals.ts",[],[],"C:\\Users\\yetan\\Programs\\personalSite\\src\\App.tsx",[],[],"C:\\Users\\yetan\\Programs\\personalSite\\src\\Pages\\Home.tsx",["35"],[],"import {\r\n  Typography,\r\n  Box,\r\n  createTheme,\r\n  ThemeProvider,\r\n  Container,\r\n  Grid,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport Header from \"../Components/Header\";\r\n\r\nconst customTheme = createTheme({\r\n  palette: {\r\n    primary: { main: \"#D6CC99\" },\r\n    secondary: {\r\n      main: \"#445D48\",\r\n      light: \"#FDE5D4\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Home = () => {\r\n  return (\r\n    <ThemeProvider theme={customTheme}>\r\n      <Container disableGutters sx={{ minWidth: \"100%\", minHeight: \"100vh\" }}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item sx={{ width: \"100%\" }}>\r\n            <Header />\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            paddingTop=\"7vh\"\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            width=\"50%\"\r\n            height=\"60%\"\r\n          >\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              alignItems=\"left\"\r\n              justifyContent=\"center\"\r\n              sx={{\r\n                width: \"100%\",\r\n                paddingTop: \"50px\",\r\n              }}\r\n            >\r\n              <Typography color=\"primary\">Hello, my name is</Typography>\r\n              <Typography\r\n                color=\"secondary\"\r\n                variant=\"h2\"\r\n                paddingTop=\"15px\"\r\n                sx={{ fontWeight: \"bold\" }}\r\n              >\r\n                Adam Dupuy.\r\n              </Typography>\r\n              <Typography\r\n                color=\"secondary.light\"\r\n                variant=\"h3\"\r\n                paddingTop=\"15px\"\r\n                sx={{ fontWeight: \"bold\" }}\r\n              >\r\n                I create websites and games.\r\n              </Typography>\r\n              <Typography\r\n                color=\"secondary.light\"\r\n                paddingTop=\"20px\"\r\n                width=\"500px\"\r\n              >\r\n                I'm a software engineer specializing in Java Springboot backend\r\n                development and React Typescript development. I want to create\r\n                things that make the internet a more enjoyable and better place.\r\n                Currently, I am applying to jobs and learning more about\r\n                programming in my free time.\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item sx={{ paddingTop: \"5vh\", width: \"100%\" }}>\r\n              <a href=\"https://github.com/AdamDupuy\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                sx={{ width: \"210px\", padding: \"10px\" }}\r\n              >\r\n                Check out my Github!\r\n              </Button>\r\n              </a>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\yetan\\Programs\\personalSite\\src\\Components\\Header.tsx",["36"],[],"import {\r\n  Container,\r\n  createTheme,\r\n  ThemeProvider,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport myIcon from \"../Assets/icon.png\";\r\n\r\nconst customTheme = createTheme({\r\n  palette: {\r\n    primary: { main: \"#D6CC99\" },\r\n    secondary: { main: \"#445D48\" },\r\n  },\r\n});\r\n\r\nconst Header = () => {\r\n  const navigate = useNavigate();\r\n  const handleClickHome = async () => {\r\n    navigate(\"personalSite/\");\r\n  };\r\n\r\n  const handleClickProjects = async () => {\r\n    navigate(\"/projects\");\r\n  };\r\n  return (\r\n    <ThemeProvider theme={customTheme}>\r\n      <Container\r\n        sx={{\r\n          height: \"10vh\",\r\n          minWidth: \"100%\",\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          sx={{\r\n            color: \"white\",\r\n            height: \"15vh\",\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            sx={{\r\n              width: { xs: \"1px\", lg: \"11px\" },\r\n              display: \"flex\",\r\n              justifyContent: \"left\",\r\n            }}\r\n            alignItems=\"left\"\r\n          >\r\n            <Button\r\n              onClick={() => handleClickHome()}\r\n              disableElevation\r\n              disableRipple\r\n              disableTouchRipple\r\n              sx={{\r\n                borderRadius: \"1px\",\r\n                maxHeight: \"0px\",\r\n                maxWidth: \"0px\",\r\n                \"&:hover\": {\r\n                  background: \"none\",\r\n                },\r\n              }}\r\n            >\r\n              <Box\r\n                component=\"img\"\r\n                justifyContent=\"center\"\r\n                sx={{\r\n                  paddingLeft: \"4vh\",\r\n                  paddingTop: \"15vh\",\r\n                  height: \"100px\",\r\n                  width: \"120px\",\r\n                  backgroundImage: myIcon,\r\n                  alignItems: \"left\",\r\n                }}\r\n                src={myIcon}\r\n              />\r\n            </Button>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            alignItems=\"right\"\r\n            justifyContent=\"right\"\r\n            direction=\"row\"\r\n            sx={{\r\n              paddingTop: \"5vh\",\r\n            }}\r\n          >\r\n            <Grid\r\n              item\r\n              sx={{\r\n                width: { xs: \"200px\", lg: \"200px\" },\r\n                display: \"flex\",\r\n                justifyContent: \"space-evenly\",\r\n                alignItems: \"right\",\r\n              }}\r\n            >\r\n              <Button onClick={() => handleClickProjects()}>\r\n                <Typography textTransform=\"none\" color=\"primary\" variant=\"h6\">\r\n                  •{\" \"}\r\n                </Typography>\r\n                <Typography color=\"inherit\" noWrap>\r\n                  &nbsp;\r\n                </Typography>\r\n                <Typography textTransform=\"none\" color=\"secondary\" variant=\"h6\">\r\n                  Projects\r\n                </Typography>\r\n              </Button>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sx={{\r\n                width: { xs: \"200px\", lg: \"200px\" },\r\n                display: \"flex\",\r\n                justifyContent: \"space-evenly\",\r\n                alignItems: \"right\",\r\n              }}\r\n            >\r\n              <Button onClick={() => handleClickHome()}>\r\n                <Typography textTransform=\"none\" color=\"primary\" variant=\"h6\">\r\n                  •{\" \"}\r\n                </Typography>\r\n                <Typography color=\"inherit\" noWrap>\r\n                  &nbsp;\r\n                </Typography>\r\n                <Typography textTransform=\"none\" color=\"secondary\" variant=\"h6\">\r\n                  About Me\r\n                </Typography>\r\n              </Button>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sx={{\r\n                width: { xs: \"200px\", lg: \"200px\" },\r\n                display: \"flex\",\r\n                justifyContent: \"space-evenly\",\r\n                alignItems: \"right\",\r\n              }}\r\n            >\r\n              <Button onClick={() => handleClickHome()}>\r\n                <Typography textTransform=\"none\" color=\"primary\" variant=\"h6\">\r\n                  •{\" \"}\r\n                </Typography>\r\n                <Typography color=\"inherit\" noWrap>\r\n                  &nbsp;\r\n                </Typography>\r\n                <Typography textTransform=\"none\" color=\"secondary\" variant=\"h6\">\r\n                  Contact\r\n                </Typography>\r\n              </Button>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sx={{\r\n                width: { xs: \"200px\", lg: \"200px\" },\r\n                display: \"flex\",\r\n                justifyContent: \"space-evenly\",\r\n                alignItems: \"right\",\r\n              }}\r\n            >\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={() => handleClickHome()}\r\n                variant=\"outlined\"\r\n              >\r\n                Resume\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\yetan\\Programs\\personalSite\\src\\Pages\\Projects.tsx",["37","38","39"],[],"import {\r\n    Typography,\r\n    Box,\r\n    createTheme,\r\n    ThemeProvider,\r\n    Container,\r\n    Grid,\r\n    Button,\r\n  } from \"@mui/material\";\r\n  import Header from \"../Components/Header\";\r\n  \r\n  const customTheme = createTheme({\r\n    palette: {\r\n      primary: { main: \"#D6CC99\" },\r\n      secondary: {\r\n        main: \"#445D48\",\r\n        light: \"#FDE5D4\",\r\n      },\r\n    },\r\n  });\r\n  \r\n  const Projects = () => {\r\n    return (\r\n      <ThemeProvider theme={customTheme}>\r\n        <Container disableGutters sx={{ minWidth: \"100%\", minHeight: \"100vh\" }}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item sx={{ width: \"100%\" }}>\r\n              <Header />\r\n            </Grid>\r\n            \r\n        </Grid>\r\n        </Container>\r\n      </ThemeProvider>\r\n    );\r\n  };\r\n  \r\n  export default Projects;\r\n  ",{"ruleId":"40","severity":1,"message":"41","line":3,"column":3,"nodeType":"42","messageId":"43","endLine":3,"endColumn":6},{"ruleId":"40","severity":1,"message":"44","line":6,"column":3,"nodeType":"42","messageId":"43","endLine":6,"endColumn":12},{"ruleId":"40","severity":1,"message":"45","line":2,"column":5,"nodeType":"42","messageId":"43","endLine":2,"endColumn":15},{"ruleId":"40","severity":1,"message":"41","line":3,"column":5,"nodeType":"42","messageId":"43","endLine":3,"endColumn":8},{"ruleId":"40","severity":1,"message":"46","line":8,"column":5,"nodeType":"42","messageId":"43","endLine":8,"endColumn":11},"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used."]